name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y python3-pip python3-venv python3-qt5 python3-pyqt5.qtcore python3-pyqt5.qtgui python3-pyqt5.qtwidgets xvfb
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --cov=procman --cov-report=xml --cov-report=term-missing -m "not gui"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  test-gui:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y python3-pip python3-venv python3-pyqt5 python3-pyqt5.qtcore python3-pyqt5.qtgui python3-pyqt5.qtwidgets xvfb
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Set up virtual display for GUI tests
      run: |
        echo "Starting virtual display..."
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo "export DISPLAY=:99" >> $GITHUB_ENV
    
    - name: Run GUI tests
      env:
        DISPLAY: :99
      run: |
        python -m pytest tests/ -v --cov=procman --cov-report=xml --cov-report=term-missing -m "gui"
